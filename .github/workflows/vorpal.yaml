name: vorpal

on:
  pull_request:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  dev:
    runs-on: ubuntu-latest
    steps:
      - run: |
          sudo apt-get update
          sudo apt-get install --yes \
            openssl \
            protobuf-compiler

      - uses: extractions/setup-just@v2

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt

      - run: |
          NICKEL_ARCH=$(uname -m)
          if [ "$NICKEL_ARCH" = "aarch64" ]; then
            NICKEL_ARCH="arm64";
          fi
          curl -fsSL \
            "https://github.com/tweag/nickel/releases/download/1.7.0/nickel-${NICKEL_ARCH}-linux" \
            -o /usr/local/bin/nickel
          chmod +x /usr/local/bin/nickel

      - run: just --version
      - run: openssl --version
      - run: protoc --version
      - run: nickel --version

      - uses: actions/checkout@v4

      - run: just format
      - run: just lint

  package:
    needs:
      - dev
    strategy:
      matrix:
        runner:
          - latest
          - latest-arm64
    runs-on: ubuntu-${{ matrix.runner }}
    steps:
      - run: |
          sudo apt-get update
          sudo apt-get install --yes \
            openssl \
            protobuf-compiler

      - uses: extractions/setup-just@v2

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt

      - run: |
          NICKEL_ARCH=$(uname -m)
          if [ "$NICKEL_ARCH" = "aarch64" ]; then
            NICKEL_ARCH="arm64";
          fi
          curl -fsSL \
            "https://github.com/tweag/nickel/releases/download/1.7.0/nickel-${NICKEL_ARCH}-linux" \
            -o /usr/local/bin/nickel
          chmod +x /usr/local/bin/nickel

      - run: just --version
      - run: openssl --version
      - run: protoc --version
      - run: nickel --version

      - uses: actions/checkout@v4

      - run: just check --release
      - run: just build --release
      - run: just test --release

      - run: |
          ARCH=$(uname -m | tr '[:upper:]' '[:lower:]')
          OS=$(uname -s | tr '[:upper:]' '[:lower:]')

          mkdir -p dist

          cp ./target/release/vorpal ./dist/vorpal

          tar -czvf vorpal-$ARCH-$OS.tar.gz -C ./dist vorpal

          echo "ARCH=$ARCH" >> $GITHUB_ENV
          echo "OS=$OS" >> $GITHUB_ENV

      - if: matrix.target == 'vorpal'
        uses: actions/upload-artifact@v4
        with:
          name: vorpal-${{ env.ARCH }}-${{ env.OS }}
          path: vorpal-${{ env.ARCH }}-${{ env.OS }}.tar.gz

  test:
    needs:
      - package
    runs-on: ubuntu-latest
    steps:
      - run: |
          NICKEL_ARCH=$(uname -m)
          if [ "$NICKEL_ARCH" = "aarch64" ]; then
            NICKEL_ARCH="arm64";
          fi
          curl -fsSL \
            "https://github.com/tweag/nickel/releases/download/1.7.0/nickel-${NICKEL_ARCH}-linux" \
            -o /usr/local/bin/nickel
          chmod +x /usr/local/bin/nickel
          nickel --version

      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: vorpal-x86_64-linux

      - run: tar -xzf vorpal-x86_64-linux/vorpal-x86_64-linux.tar.gz

      - run: ./vorpal validate

      - run: |
          ./vorpal worker start > worker_output.log 2>&1 &
          WORKER_PID=$(echo $!)
          echo "WORKER_PID=$WORKER_PID" >> $GITHUB_ENV
          echo "Worker pid: $WORKER_PID"

      - run: ./vorpal build

      - if: always()
        run: |
          kill $WORKER_PID
          cat worker_output.log

  release:
    needs:
      - test
    permissions:
      attestations: write
      contents: write
      id-token: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          pattern: vorpal-*

      - run: git fetch --tags

      - if: github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if gh release view edge > /dev/null 2>&1; then
            gh release delete --cleanup-tag --yes edge
          fi
          git tag edge
          git push --tags

      - if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          body: Latest artifacts from `main` branch when merged.
          fail_on_unmatched_files: true
          files: |
            vorpal-aarch64-linux/vorpal-aarch64-linux.tar.gz
            vorpal-x86_64-linux/vorpal-x86_64-linux.tar.gz
          name: edge
          prerelease: true
          tag_name: refs/tags/edge

      - run: |
          mkdir -p dist/aarch64-linux
          mkdir -p dist/x86_64-linux
          tar -xzf vorpal-aarch64-linux/vorpal-aarch64-linux.tar.gz -C dist/aarch64-linux
          tar -xzf vorpal-x86_64-linux/vorpal-x86_64-linux.tar.gz -C dist/x86_64-linux

      - if: github.ref == 'refs/heads/main'
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: |
            dist/aarch64-linux/vorpal
            dist/x86_64-linux/vorpal
