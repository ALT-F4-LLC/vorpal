syntax = "proto3";

package vorpal.artifact.v0;

enum ArtifactSystem {
    UNKNOWN_SYSTEM = 0;
    AARCH64_LINUX = 1;
    AARCH64_MACOS = 2;
    X86_64_LINUX = 3;
    X86_64_MACOS = 4;
}

message ArtifactEnvironment {
    string key = 1;
    string value = 2;
}

message ArtifactId {
    string hash = 1;
    string name = 2;
}

message ArtifactSource {
    repeated string excludes = 1;
    repeated string includes = 2;
    string name = 3;
    string path = 4;
}

message ArtifactStep {
    optional string script = 1;
    repeated ArtifactEnvironment environments = 2;
    repeated string arguments = 3;
    string entrypoint = 4;
}

message Artifact {
    // optional string hash = 1;
    repeated ArtifactId artifacts = 2;
    repeated ArtifactSource sources = 3;
    repeated ArtifactStep steps = 4;
    repeated ArtifactSystem systems = 5;
    string name = 6;
}

message ArtifactBuildRequest {
    ArtifactSystem target = 1;
    optional bytes source_data = 2;
    optional bytes source_data_signature = 3;
    repeated ArtifactId artifacts = 4;
    repeated ArtifactStep steps = 5;
    string hash = 6;
    string name = 7;
}

message ArtifactBuildResponse {
    string output = 1;
}

service ArtifactService {
    rpc Build (stream ArtifactBuildRequest) returns (stream ArtifactBuildResponse);
}
