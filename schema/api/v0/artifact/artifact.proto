syntax = "proto3";

package vorpal.artifact.v0;

service ArtifactService {
    rpc Build (ArtifactBuildRequest) returns (stream ArtifactBuildResponse);
}

enum ArtifactSystem {
    UNKNOWN_SYSTEM = 0;
    AARCH64_LINUX = 1;
    AARCH64_MACOS = 2;
    X86_64_LINUX = 3;
    X86_64_MACOS = 4;
}

message ArtifactId {
    string hash = 1;
    string name = 2;
}

message ArtifactSourceId {
    string hash = 1;
    string name = 2;
}

message ArtifactStepEnvironment {
    string key = 1;
    string value = 2;
}

message ArtifactStep {
    optional string entrypoint = 1;
    optional string script = 2;
    repeated ArtifactStepEnvironment environments = 3;
    repeated string arguments = 4;
}

message Artifact {
    repeated ArtifactId artifacts = 1;
    repeated ArtifactSourceId sources = 2;
    repeated ArtifactStep steps = 3;
    repeated ArtifactSystem systems = 4;
    string name = 5;
}

message ArtifactBuildRequest {
    Artifact artifact = 1;
    ArtifactSystem system = 2;
}

message ArtifactBuildResponse {
    string output = 1;
}
