syntax = "proto3";

package vorpal.config.v0;

service ConfigService {
    rpc Package (ConfigPackageRequest) returns (stream ConfigPackageResponse);
    // rpc Secret (ConfigSecretRequest) returns (stream ConfigSecretResponse);
}

enum ConfigPackageSourceKind {
    UNKNOWN_SOURCE = 0;
    LOCAL = 1;
    HTTP = 2;
    GIT = 3;
}

message ConfigPackageOutput {
    string name = 1;
    string hash = 2;
}

enum ConfigPackageBuildSystem {
    UNKNOWN_SYSTEM = 0;
    AARCH64_LINUX = 1;
    AARCH64_MACOS = 2;
    X86_64_LINUX = 3;
    X86_64_MACOS = 4;
}

message ConfigPackageBuild {
    ConfigPackageBuildSystem system = 1;
    map<string, string> environment = 2;
    optional string image = 3;
    repeated ConfigPackageOutput packages = 4;
    string script = 5;
}

message ConfigPackageSource {
    ConfigPackageSourceKind kind = 1;
    optional string hash = 2;
    repeated string ignore_paths = 3;
    string uri = 4;
}

message ConfigPackageRequest {
    ConfigPackageBuild build = 1;
    ConfigPackageSource source = 2;
    string name = 3;
}

message ConfigPackageResponse {
    optional ConfigPackageOutput package_output = 1;
    string log_output = 2;
}
